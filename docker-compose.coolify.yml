version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./zamio_backend
      dockerfile: Dockerfile.prod
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-False}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      BASE_URL: ${BASE_URL}
      DJANGO_SETTINGS_MODULE: core.settings
      MEDIA_ROOT: /app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000"
    volumes:
      - media_data:/app/media
    restart: unless-stopped

  worker:
    build:
      context: ./zamio_backend
      dockerfile: Dockerfile.prod
    command: celery -A core worker -l info
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-False}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DJANGO_SETTINGS_MODULE: core.settings
      RUN_MIGRATIONS: "0"
      MEDIA_ROOT: /app/media
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - media_data:/app/media
    restart: unless-stopped

  beat:
    build:
      context: ./zamio_backend
      dockerfile: Dockerfile.prod
    command: celery -A core beat -l info --scheduler=django_celery_beat.schedulers:DatabaseScheduler
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-False}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DJANGO_SETTINGS_MODULE: core.settings
      RUN_MIGRATIONS: "0"
      MEDIA_ROOT: /app/media
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - media_data:/app/media

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        WORKSPACE_NAME: zamio_frontend
        WORKSPACE_DIR: zamio_frontend
        VITE_API_URL: ${VITE_API_URL}
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  stations:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        WORKSPACE_NAME: zamio_stations
        WORKSPACE_DIR: zamio_stations
        VITE_API_URL: ${VITE_API_URL}
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3001:80"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  publisher:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        WORKSPACE_NAME: zamio_publisher
        WORKSPACE_DIR: zamio_publisher
        VITE_API_URL: ${VITE_API_URL}
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3002:80"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  admin:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        WORKSPACE_NAME: zamio_admin
        WORKSPACE_DIR: zamio_admin
        VITE_API_URL: ${VITE_API_URL}
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3003:80"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  media_data:
