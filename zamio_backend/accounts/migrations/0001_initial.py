# Generated by Django 4.2.7 on 2025-10-21 11:30

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("user_id", models.UUIDField(blank=True, null=True, unique=True)),
                ("email", models.EmailField(max_length=255, unique=True)),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default=accounts.models.get_default_profile_image,
                        null=True,
                        upload_to=accounts.models.upload_image_path,
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "user_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Artist", "Artist"),
                            ("Station", "Station"),
                            ("Admin", "Admin"),
                            ("Publisher", "Publisher"),
                            ("contributor", "contributor"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "kyc_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                            ("incomplete", "Incomplete"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("kyc_documents", models.JSONField(blank=True, default=dict)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("skipped", "Skipped"),
                            ("incomplete", "Incomplete"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "verification_skipped_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("verification_reminder_sent", models.BooleanField(default=False)),
                ("two_factor_enabled", models.BooleanField(default=False)),
                (
                    "two_factor_secret",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                ("fcm_token", models.TextField(blank=True, null=True)),
                ("otp_code", models.CharField(blank=True, max_length=10, null=True)),
                ("email_token", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "verification_code",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "verification_code_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "verification_method",
                    models.CharField(
                        blank=True,
                        choices=[("code", "Code"), ("link", "Link")],
                        default="link",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "verification_expires_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("verification_attempts", models.IntegerField(default=0)),
                (
                    "verification_blocked_until",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "last_verification_request",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("reset_token", models.CharField(blank=True, max_length=64, null=True)),
                ("reset_code", models.CharField(blank=True, max_length=4, null=True)),
                (
                    "reset_code_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("reset_expires_at", models.DateTimeField(blank=True, null=True)),
                ("reset_attempts", models.IntegerField(default=0)),
                ("reset_blocked_until", models.DateTimeField(blank=True, null=True)),
                ("last_reset_request", models.DateTimeField(blank=True, null=True)),
                ("profile_complete", models.BooleanField(default=False)),
                ("verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_online", models.BooleanField(default=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("staff", models.BooleanField(default=False)),
                ("admin", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("push_notifications", models.BooleanField(default=True)),
                ("marketing_emails", models.BooleanField(default=False)),
                ("royalty_alerts", models.BooleanField(default=True)),
                ("match_notifications", models.BooleanField(default=True)),
                ("weekly_reports", models.BooleanField(default=True)),
                ("sound_notifications", models.BooleanField(default=True)),
                ("privacy_profile_public", models.BooleanField(default=False)),
                ("privacy_show_earnings", models.BooleanField(default=False)),
                ("privacy_show_plays", models.BooleanField(default=True)),
                (
                    "theme_preference",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("system", "System"),
                        ],
                        default="system",
                        max_length=10,
                    ),
                ),
                ("language", models.CharField(default="en", max_length=10)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Preferences",
                "verbose_name_plural": "User Preferences",
            },
        ),
        migrations.CreateModel(
            name="UserEmergencyContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_emergency_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("permission", models.CharField(max_length=100)),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "granted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="granted_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "permission"],
                        name="accounts_us_user_id_167e7b_idx",
                    ),
                    models.Index(
                        fields=["permission"], name="accounts_us_permiss_15da5d_idx"
                    ),
                ],
                "unique_together": {("user", "permission")},
            },
        ),
        migrations.CreateModel(
            name="KYCDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("id_card", "National ID Card"),
                            ("passport", "Passport"),
                            ("drivers_license", "Driver's License"),
                            ("utility_bill", "Utility Bill"),
                            ("bank_statement", "Bank Statement"),
                            ("business_registration", "Business Registration"),
                            ("tax_certificate", "Tax Certificate"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=accounts.models.secure_file_upload_path,
                        validators=[
                            accounts.models.validate_file_size,
                            accounts.models.validate_file_type,
                        ],
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                ("file_size", models.PositiveIntegerField()),
                ("file_hash", models.CharField(max_length=64, unique=True)),
                ("content_type", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Uploaded"),
                            ("pending_review", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_kyc_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "document_type"],
                        name="accounts_ky_user_id_e20458_idx",
                    ),
                    models.Index(
                        fields=["status"], name="accounts_ky_status_33e5f8_idx"
                    ),
                    models.Index(
                        fields=["uploaded_at"], name="accounts_ky_uploade_a6620a_idx"
                    ),
                ],
                "unique_together": {("user", "document_type")},
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                (
                    "resource_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "resource_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("response_data", models.JSONField(blank=True, default=dict)),
                ("status_code", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("trace_id", models.UUIDField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="accounts_au_user_id_d4cccd_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="accounts_au_action_11cc52_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "resource_id"],
                        name="accounts_au_resourc_30880d_idx",
                    ),
                    models.Index(
                        fields=["trace_id"], name="accounts_au_trace_i_57d1a4_idx"
                    ),
                ],
            },
        ),
    ]
