# Generated by Django 5.1.12 on 2025-09-22 15:29

import artists.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("release_date", models.DateField(blank=True, null=True)),
                (
                    "cover_art",
                    models.ImageField(
                        default=artists.models.get_default_album_cover_image,
                        upload_to="album_covers/",
                    ),
                ),
                (
                    "upc_code",
                    models.CharField(
                        help_text="Universal Product Code",
                        max_length=30,
                        null=True,
                        unique=True,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "artist_id",
                    models.CharField(
                        blank=True,
                        default=uuid.uuid4,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("stage_name", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "total_earnings",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("spotify_url", models.URLField(blank=True, null=True)),
                ("shazam_url", models.URLField(blank=True, null=True)),
                ("facebook", models.URLField(blank=True, null=True)),
                ("twitter", models.URLField(blank=True, null=True)),
                ("instagram", models.URLField(blank=True, null=True)),
                ("youtube", models.URLField(blank=True, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "bank_account",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "momo_account",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("verified", models.BooleanField(default=False)),
                ("region", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("self_published", models.BooleanField(default=True)),
                (
                    "royalty_collection_method",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Collection"),
                            ("publisher", "Through Publisher"),
                            ("pro", "Through PRO"),
                        ],
                        default="direct",
                        max_length=20,
                    ),
                ),
                (
                    "publisher_relationship_status",
                    models.CharField(
                        choices=[
                            ("independent", "Independent"),
                            ("pending", "Pending Publisher Approval"),
                            ("signed", "Signed with Publisher"),
                            ("terminated", "Terminated Relationship"),
                        ],
                        default="independent",
                        max_length=20,
                    ),
                ),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=900, null=True),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "onboarding_step",
                    models.CharField(
                        choices=[
                            ("profile", "Complete Profile"),
                            ("social-media", "Social Media"),
                            ("payment", "Add Payment Info"),
                            ("publisher", "Add Publisher"),
                            ("track", "Upload Track"),
                            ("done", "Onboarding Complete"),
                        ],
                        default="profile",
                        max_length=20,
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("social_media_added", models.BooleanField(default=False)),
                ("payment_info_added", models.BooleanField(default=False)),
                ("publisher_added", models.BooleanField(default=False)),
                ("track_uploaded", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ArtistGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ArtistInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("stage_name", models.CharField(blank=True, max_length=255, null=True)),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sent_on", models.DateTimeField(auto_now_add=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Contributor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contributor_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Composer", "Composer"),
                            ("Producer", "Producer"),
                            ("Writer", "Writer"),
                            ("Featured Artist", "Featured Artist"),
                            ("Mixer", "Mixer"),
                            ("Engineer", "Engineer"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "percent_split",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Fingerprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hash", models.CharField(db_index=True, max_length=64)),
                ("offset", models.IntegerField()),
                ("version", models.CharField(default="1.0", max_length=10)),
                ("algorithm", models.CharField(default="chromaprint", max_length=50)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=4, default=1.0, max_digits=5),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Enhanced fingerprint metadata including quality metrics",
                    ),
                ),
                ("duration_ms", models.IntegerField(blank=True, null=True)),
                ("sample_rate", models.IntegerField(blank=True, null=True)),
                ("processing_time_ms", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("color", models.CharField(max_length=100)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PlatformAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("Spotify", "Spotify"),
                            ("Shazam", "Shazam"),
                            ("Apple Music", "Apple Music"),
                            ("YouTube Music", "YouTube Music"),
                            ("Tidal", "Tidal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("url", models.URLField()),
                ("available", models.BooleanField(default=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "track_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "cover_art",
                    models.ImageField(
                        default=artists.models.get_default_track_cover_image,
                        upload_to="track_covers/",
                    ),
                ),
                ("audio_file", models.FileField(upload_to="tracks/")),
                (
                    "audio_file_mp3",
                    models.FileField(blank=True, null=True, upload_to="tracks/mp3/"),
                ),
                (
                    "audio_file_wav",
                    models.FileField(blank=True, null=True, upload_to="tracks/wav/"),
                ),
                ("release_date", models.DateField(blank=True, null=True)),
                (
                    "isrc_code",
                    models.CharField(
                        blank=True,
                        help_text="International Standard Recording Code",
                        max_length=30,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True, help_text="Track length", null=True
                    ),
                ),
                ("lyrics", models.TextField(blank=True, null=True)),
                ("explicit", models.BooleanField(default=False)),
                ("fingerprinted", models.BooleanField(default=False)),
                (
                    "royalty_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="TrackFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
                ("rating", models.IntegerField(default=0)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
