# Generated by Django 4.2.7 on 2025-10-21 11:30

import artists.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("fan", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "album_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "cover_art",
                    models.ImageField(
                        default=artists.models.get_default_album_cover_image,
                        upload_to=artists.models.secure_image_upload_path,
                        validators=[
                            artists.models.validate_image_file_size,
                            artists.models.validate_image_file_type,
                        ],
                    ),
                ),
                ("release_date", models.DateField(blank=True, null=True)),
                (
                    "cover_art_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("last_malware_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "artist_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("stage_name", models.CharField(max_length=255)),
                ("bio", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("instagram", models.URLField(blank=True, null=True)),
                ("twitter", models.URLField(blank=True, null=True)),
                ("facebook", models.URLField(blank=True, null=True)),
                ("youtube", models.URLField(blank=True, null=True)),
                ("spotify", models.URLField(blank=True, null=True)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                            ("skipped", "Skipped"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verification_documents", models.JSONField(blank=True, default=list)),
                ("is_self_published", models.BooleanField(default=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Contributor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contributor_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Composer", "Composer"),
                            ("Producer", "Producer"),
                            ("Writer", "Writer"),
                            ("Featured Artist", "Featured Artist"),
                            ("Mixer", "Mixer"),
                            ("Engineer", "Engineer"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "percent_split",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Fingerprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hash", models.CharField(db_index=True, max_length=64)),
                ("offset", models.IntegerField()),
                ("version", models.IntegerField(default=1)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("algorithm_version", models.CharField(default="v1.0", max_length=20)),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("audio_features", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PlatformAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("Spotify", "Spotify"),
                            ("Shazam", "Shazam"),
                            ("Apple Music", "Apple Music"),
                            ("YouTube Music", "YouTube Music"),
                            ("Tidal", "Tidal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("url", models.URLField()),
                ("available", models.BooleanField(default=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "track_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "cover_art",
                    models.ImageField(
                        default=artists.models.get_default_track_cover_image,
                        upload_to=artists.models.secure_image_upload_path,
                        validators=[
                            artists.models.validate_image_file_size,
                            artists.models.validate_image_file_type,
                        ],
                    ),
                ),
                (
                    "audio_file",
                    models.FileField(
                        upload_to=artists.models.secure_audio_upload_path,
                        validators=[
                            artists.models.validate_audio_file_size,
                            artists.models.validate_audio_file_type,
                        ],
                    ),
                ),
                (
                    "audio_file_mp3",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=artists.models.secure_audio_upload_path,
                        validators=[
                            artists.models.validate_audio_file_size,
                            artists.models.validate_audio_file_type,
                        ],
                    ),
                ),
                (
                    "audio_file_wav",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=artists.models.secure_audio_upload_path,
                        validators=[
                            artists.models.validate_audio_file_size,
                            artists.models.validate_audio_file_type,
                        ],
                    ),
                ),
                ("release_date", models.DateField(blank=True, null=True)),
                (
                    "isrc_code",
                    models.CharField(
                        blank=True,
                        help_text="International Standard Recording Code",
                        max_length=30,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True, help_text="Track length", null=True
                    ),
                ),
                ("lyrics", models.TextField(blank=True, null=True)),
                ("explicit", models.BooleanField(default=False)),
                (
                    "audio_file_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "cover_art_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("queued", "Queued"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("last_malware_scan", models.DateTimeField(blank=True, null=True)),
                ("is_quarantined", models.BooleanField(default=False)),
                ("quarantine_reason", models.TextField(blank=True, null=True)),
                ("fingerprinted", models.BooleanField(default=False)),
                (
                    "royalty_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "album",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="artists.album",
                    ),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="artists.artist"
                    ),
                ),
                (
                    "genre",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="artists.genre",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UploadProcessingStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "upload_id",
                    models.CharField(db_index=True, max_length=64, unique=True),
                ),
                (
                    "upload_type",
                    models.CharField(
                        choices=[
                            ("track_audio", "Track Audio"),
                            ("track_cover", "Track Cover Art"),
                            ("album_cover", "Album Cover Art"),
                        ],
                        max_length=20,
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField()),
                ("file_hash", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("queued", "Queued"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("progress_percentage", models.IntegerField(default=0)),
                ("current_step", models.CharField(blank=True, max_length=100)),
                ("entity_id", models.IntegerField(blank=True, null=True)),
                ("entity_type", models.CharField(blank=True, max_length=20)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TrackFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
                ("rating", models.IntegerField(default=0)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "fan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fan_feedback",
                        to="fan.fan",
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="track_feedback",
                        to="artists.track",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrackEditHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("changed_fields", models.JSONField(default=dict)),
                ("old_values", models.JSONField(default=dict)),
                ("new_values", models.JSONField(default=dict)),
                ("edit_reason", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edit_history",
                        to="artists.track",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
