# Generated by Django 4.2.7 on 2025-10-21 11:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stations.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Complaint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "complaint_id",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("subject", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "complaint_type",
                    models.CharField(
                        choices=[
                            ("technical", "Technical Issue"),
                            ("content", "Content Dispute"),
                            ("billing", "Billing Issue"),
                            ("service", "Service Quality"),
                            ("compliance", "Compliance Issue"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("resolution_notes", models.TextField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_complaints",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "complainant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="filed_complaints",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_complaints",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Station",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "station_id",
                    models.CharField(
                        blank=True,
                        default=uuid.uuid4,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default=stations.models.get_default_station_image,
                        null=True,
                        upload_to=stations.models.secure_station_image_path,
                        validators=[
                            stations.models.validate_station_image_size,
                            stations.models.validate_station_image_type,
                        ],
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("region", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "station_class",
                    models.CharField(
                        choices=[
                            ("class_a", "Class A - Major Metropolitan"),
                            ("class_b", "Class B - Regional"),
                            ("class_c", "Class C - Local/Community"),
                            ("online", "Online Only"),
                            ("community", "Community/Non-Profit"),
                        ],
                        default="class_c",
                        max_length=20,
                    ),
                ),
                (
                    "station_type",
                    models.CharField(
                        choices=[
                            ("commercial", "Commercial"),
                            ("public", "Public/Educational"),
                            ("community", "Community"),
                            ("religious", "Religious"),
                            ("online", "Online Only"),
                        ],
                        default="commercial",
                        max_length=20,
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True,
                        help_text="Broadcasting license number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "coverage_area",
                    models.CharField(
                        blank=True,
                        help_text="Coverage area description",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "estimated_listeners",
                    models.IntegerField(
                        blank=True, help_text="Estimated daily listeners", null=True
                    ),
                ),
                (
                    "regulatory_body",
                    models.CharField(
                        blank=True,
                        help_text="e.g., GHAMRO, COSGA",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "compliance_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "compliance_contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "compliance_contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("operating_hours_start", models.TimeField(blank=True, null=True)),
                ("operating_hours_end", models.TimeField(blank=True, null=True)),
                ("timezone", models.CharField(default="Africa/Accra", max_length=50)),
                ("website_url", models.URLField(blank=True, null=True)),
                ("social_media_links", models.JSONField(blank=True, default=dict)),
                (
                    "broadcast_frequency",
                    models.CharField(
                        blank=True, help_text="e.g., 101.5 FM", max_length=20, null=True
                    ),
                ),
                (
                    "transmission_power",
                    models.CharField(
                        blank=True, help_text="e.g., 10kW", max_length=50, null=True
                    ),
                ),
                (
                    "stream_url",
                    models.URLField(
                        blank=True,
                        help_text="Live stream URL for audio monitoring",
                        null=True,
                    ),
                ),
                (
                    "stream_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("testing", "Testing"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                ("last_monitored", models.DateTimeField(blank=True, null=True)),
                (
                    "stream_validation_errors",
                    models.TextField(
                        blank=True,
                        help_text="Last validation error messages",
                        null=True,
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Verification"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                            ("suspended", "Suspended"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("verification_notes", models.TextField(blank=True, null=True)),
                (
                    "bank_account",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "momo_account",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=900, null=True),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "avg_detection_confidence",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                ("about", models.TextField(blank=True, null=True)),
                (
                    "onboarding_step",
                    models.CharField(
                        choices=[
                            ("profile", "Complete Profile"),
                            ("staff", "Staff"),
                            ("payment", "Add Payment Info"),
                        ],
                        default="profile",
                        max_length=20,
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("staff_completed", models.BooleanField(default=False)),
                ("report_completed", models.BooleanField(default=False)),
                ("payment_info_added", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="station_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_stations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StationStreamLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="station_links",
                        to="stations.station",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StationProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("program_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="station_programs",
                        to="stations.station",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProgramStaff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Producer", "Producer"),
                            ("Presenter", "Presenter"),
                            ("Dj", "Dj"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "station_program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="station_programs",
                        to="stations.stationprogram",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComplaintUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_type",
                    models.CharField(
                        choices=[
                            ("comment", "Comment"),
                            ("status_change", "Status Change"),
                            ("assignment", "Assignment"),
                            ("resolution", "Resolution"),
                        ],
                        default="comment",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("old_status", models.CharField(blank=True, max_length=20, null=True)),
                ("new_status", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "complaint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="stations.complaint",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="complaint",
            name="station",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaints",
                to="stations.station",
            ),
        ),
        migrations.CreateModel(
            name="StationStaff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("manager", "Station Manager"),
                            ("producer", "Producer"),
                            ("presenter", "Presenter"),
                            ("dj", "DJ"),
                            ("engineer", "Sound Engineer"),
                            ("admin", "Administrator"),
                            ("compliance_officer", "Compliance Officer"),
                        ],
                        default="presenter",
                        max_length=50,
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("edit", "Edit"),
                            ("admin", "Administrator"),
                        ],
                        default="view",
                        max_length=20,
                    ),
                ),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "emergency_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("hire_date", models.DateField(blank=True, null=True)),
                ("employee_id", models.CharField(blank=True, max_length=50, null=True)),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                ("can_upload_playlogs", models.BooleanField(default=False)),
                ("can_manage_streams", models.BooleanField(default=False)),
                ("can_view_analytics", models.BooleanField(default=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="station_staff",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "unique_together": {("station", "email")},
            },
        ),
        migrations.AddIndex(
            model_name="complaint",
            index=models.Index(
                fields=["station", "status"], name="stations_co_station_2812c9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="complaint",
            index=models.Index(
                fields=["complainant", "created_at"],
                name="stations_co_complai_e39676_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complaint",
            index=models.Index(
                fields=["assigned_to", "status"], name="stations_co_assigne_4e1050_idx"
            ),
        ),
    ]
