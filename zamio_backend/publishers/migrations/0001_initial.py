# Generated by Django 5.1.12 on 2025-09-22 15:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("artists", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PublisherInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                        ],
                        max_length=20,
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("sent_on", models.DateTimeField(auto_now_add=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="artists.artist"
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publisher_invite",
                        to="artists.track",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublisherProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "publisher_id",
                    models.CharField(
                        blank=True,
                        default=uuid.uuid4,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bank_account", models.CharField(blank=True, max_length=100)),
                ("momo_account", models.CharField(blank=True, max_length=100)),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("verified", models.BooleanField(default=False)),
                ("region", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=900, null=True),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=20,
                        default=0.0,
                        max_digits=50,
                        null=True,
                    ),
                ),
                (
                    "writer_split",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "publisher_split",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "onboarding_step",
                    models.CharField(
                        choices=[
                            ("profile", "Complete Profile"),
                            ("revenue-split", "Revenue Split"),
                            ("link-artist", "Sign Link Artist"),
                            ("payment", "Add Payment Info"),
                        ],
                        default="profile",
                        max_length=20,
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("revenue_split_completed", models.BooleanField(default=False)),
                ("link_artist_completed", models.BooleanField(default=False)),
                ("payment_info_added", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publisher",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublishingAgreement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("writer_share", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "publisher_share",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("contract_file", models.FileField(blank=True, upload_to="contracts/")),
                ("verified_by_admin", models.BooleanField(default=False)),
                ("agreement_date", models.DateField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publishers.publisherprofile",
                    ),
                ),
                (
                    "songwriter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="published_songs",
                        to="artists.artist",
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="artists.track"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublisherArtistRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("exclusive", "Exclusive Publishing"),
                            ("co_publishing", "Co-Publishing"),
                            ("administration", "Administration Only"),
                            ("sub_publishing", "Sub-Publishing"),
                        ],
                        default="exclusive",
                        max_length=20,
                    ),
                ),
                ("territory", models.CharField(default="Ghana", max_length=100)),
                ("worldwide", models.BooleanField(default=False)),
                (
                    "royalty_split_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Publisher's percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "advance_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=10
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "contract_file",
                    models.FileField(blank=True, upload_to="publisher_contracts/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "Pending Approval"),
                            ("suspended", "Suspended"),
                            ("terminated", "Terminated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("approved_by_admin", models.BooleanField(default=False)),
                ("approved_by_artist", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publisher_relationships",
                        to="artists.artist",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artist_relationships",
                        to="publishers.publisherprofile",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["publisher", "status"],
                        name="publishers__publish_57e4de_idx",
                    ),
                    models.Index(
                        fields=["artist", "status"],
                        name="publishers__artist__c42b7f_idx",
                    ),
                    models.Index(
                        fields=["status", "start_date"],
                        name="publishers__status_a7ae57_idx",
                    ),
                ],
                "unique_together": {("publisher", "artist", "territory")},
            },
        ),
    ]
