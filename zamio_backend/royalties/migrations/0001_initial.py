# Generated by Django 5.1.12 on 2025-09-22 15:29

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("music_monitor", "0001_initial"),
        ("publishers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PartnerPRO",
            fields=[
                (
                    "publisherprofile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="publishers.publisherprofile",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pro_code",
                    models.CharField(
                        help_text="Unique PRO identifier (e.g., ASCAP, BMI, GHAMRO)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "pro_type",
                    models.CharField(
                        choices=[
                            ("local", "Local PRO"),
                            ("international", "International PRO"),
                            ("reciprocal", "Reciprocal Partner"),
                        ],
                        default="international",
                        max_length=20,
                    ),
                ),
                ("country_code", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "territory",
                    models.CharField(
                        blank=True,
                        help_text="Territory or region covered",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "reporting_standard",
                    models.CharField(
                        choices=[
                            ("CWR", "CWR"),
                            ("DDEX-DSR", "DDEX-DSR"),
                            ("CSV-Custom", "CSV-Custom"),
                        ],
                        default="CSV-Custom",
                        max_length=20,
                    ),
                ),
                (
                    "default_admin_fee_percent",
                    models.DecimalField(decimal_places=2, default=15.0, max_digits=6),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        blank=True,
                        help_text="API endpoint for direct integration",
                        null=True,
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="API key for integration",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "api_settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional API configuration",
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("sync_status", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "verbose_name": "Partner PRO",
                "verbose_name_plural": "Partner PROs",
            },
            bases=("publishers.publisherprofile",),
        ),
        migrations.CreateModel(
            name="RoyaltyCycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("territory", models.CharField(default="GH", max_length=10)),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Open", "Open"),
                            ("Locked", "Locked"),
                            ("Invoiced", "Invoiced"),
                            ("Remitted", "Remitted"),
                        ],
                        default="Open",
                        max_length=20,
                    ),
                ),
                (
                    "admin_fee_percent_default",
                    models.DecimalField(decimal_places=2, default=15.0, max_digits=6),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CurrencyExchangeRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_currency",
                    models.CharField(
                        help_text="Source currency code (ISO 4217)", max_length=3
                    ),
                ),
                (
                    "to_currency",
                    models.CharField(
                        help_text="Target currency code (ISO 4217)", max_length=3
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=8, help_text="Exchange rate", max_digits=15
                    ),
                ),
                (
                    "effective_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "source",
                    models.CharField(
                        default="manual",
                        help_text="Rate source (manual, api, etc.)",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["from_currency", "to_currency", "effective_date"],
                        name="royalties_c_from_cu_6a03d1_idx",
                    ),
                    models.Index(
                        fields=["is_active", "effective_date"],
                        name="royalties_c_is_acti_7324dc_idx",
                    ),
                ],
                "unique_together": {("from_currency", "to_currency", "effective_date")},
            },
        ),
        migrations.CreateModel(
            name="ExternalWork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "iswc",
                    models.CharField(
                        blank=True, db_index=True, max_length=20, null=True
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("alt_titles", models.JSONField(blank=True, default=list)),
                ("work_metadata", models.JSONField(blank=True, default=dict)),
                (
                    "origin_partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_works",
                        to="royalties.partnerpro",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExternalRecording",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "isrc",
                    models.CharField(
                        blank=True, db_index=True, max_length=20, null=True
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, help_text="Duration in seconds", null=True
                    ),
                ),
                ("recording_metadata", models.JSONField(blank=True, default=dict)),
                (
                    "work",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recordings",
                        to="royalties.externalwork",
                    ),
                ),
                (
                    "origin_partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_recordings",
                        to="royalties.partnerpro",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReciprocalAgreement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("territory", models.CharField(default="GH", max_length=10)),
                ("effective_date", models.DateField(default=django.utils.timezone.now)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                (
                    "admin_fee_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Draft", "Draft"),
                            ("Active", "Active"),
                            ("Suspended", "Suspended"),
                            ("Terminated", "Terminated"),
                        ],
                        default="Draft",
                        max_length=20,
                    ),
                ),
                (
                    "reporting_frequency",
                    models.CharField(
                        choices=[
                            ("Quarterly", "Quarterly"),
                            ("SemiAnnual", "SemiAnnual"),
                            ("Annual", "Annual"),
                            ("Custom", "Custom"),
                        ],
                        default="Quarterly",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agreements",
                        to="royalties.partnerpro",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PartnerReportExport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("CSV", "CSV"),
                            ("CWR", "CWR"),
                            ("DDEX-DSR", "DDEX-DSR"),
                        ],
                        default="CSV",
                        max_length=20,
                    ),
                ),
                ("file", models.CharField(max_length=500)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("checksum", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_exports",
                        to="royalties.partnerpro",
                    ),
                ),
                (
                    "royalty_cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_exports",
                        to="royalties.royaltycycle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PartnerRemittance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("currency", models.CharField(default="GHS", max_length=10)),
                (
                    "gross_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "admin_fee_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "net_payable",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "payment_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "statement_file",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Sent", "Sent"),
                            ("Settled", "Settled"),
                            ("Failed", "Failed"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("settled_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remittances",
                        to="royalties.partnerpro",
                    ),
                ),
                (
                    "royalty_cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remittances",
                        to="royalties.royaltycycle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoyaltyLineItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("total_duration_seconds", models.PositiveIntegerField(default=0)),
                (
                    "gross_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "admin_fee_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "net_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("calculation_notes", models.TextField(blank=True, null=True)),
                (
                    "external_recording",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="royalties.externalrecording",
                    ),
                ),
                (
                    "external_work",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="royalties.externalwork",
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="royalties.partnerpro",
                    ),
                ),
                (
                    "royalty_cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="royalties.royaltycycle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoyaltyRateStructure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Rate structure name", max_length=100),
                ),
                (
                    "station_class",
                    models.CharField(
                        choices=[
                            ("class_a", "Class A - Major Metropolitan"),
                            ("class_b", "Class B - Regional"),
                            ("class_c", "Class C - Local/Community"),
                            ("online", "Online Only"),
                            ("community", "Community/Non-Profit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "time_period",
                    models.CharField(
                        choices=[
                            ("prime_time", "Prime Time (6-10 AM, 4-8 PM)"),
                            ("regular_time", "Regular Time (10 AM-4 PM, 8 PM-12 AM)"),
                            ("off_peak", "Off Peak (12-6 AM)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "base_rate_per_second",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Base rate per second in GHS",
                        max_digits=10,
                    ),
                ),
                (
                    "multiplier",
                    models.DecimalField(
                        decimal_places=3,
                        default=1.0,
                        help_text="Time period multiplier",
                        max_digits=5,
                    ),
                ),
                ("effective_date", models.DateField(default=django.utils.timezone.now)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("currency", models.CharField(default="GHS", max_length=3)),
                ("territory", models.CharField(default="GH", max_length=10)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["station_class", "time_period", "effective_date"],
                        name="royalties_r_station_4cc1a3_idx",
                    ),
                    models.Index(
                        fields=["is_active", "territory"],
                        name="royalties_r_is_acti_090847_idx",
                    ),
                ],
                "unique_together": {
                    ("station_class", "time_period", "effective_date", "territory")
                },
            },
        ),
        migrations.CreateModel(
            name="RoyaltyCalculationAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "calculation_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "calculation_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual Play Log"),
                            ("batch", "Batch Processing"),
                            ("cycle", "Royalty Cycle"),
                            ("recalculation", "Recalculation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=4, max_digits=12)),
                ("currency", models.CharField(default="GHS", max_length=3)),
                ("distributions_count", models.IntegerField(default=0)),
                ("calculation_metadata", models.JSONField(blank=True, default=dict)),
                ("rate_structure_used", models.JSONField(blank=True, default=dict)),
                ("errors", models.JSONField(blank=True, default=list)),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "calculated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "play_log",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_monitor.playlog",
                    ),
                ),
                (
                    "royalty_cycle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="royalties.royaltycycle",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["calculation_type", "calculated_at"],
                        name="royalties_r_calcula_ce0314_idx",
                    ),
                    models.Index(
                        fields=["play_log", "calculated_at"],
                        name="royalties_r_play_lo_54715a_idx",
                    ),
                    models.Index(
                        fields=["royalty_cycle", "calculated_at"],
                        name="royalties_r_royalty_a3d1d0_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UsageAttribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "match_method",
                    models.CharField(
                        choices=[
                            ("fingerprint", "fingerprint"),
                            ("metadata", "metadata"),
                        ],
                        default="metadata",
                        max_length=20,
                    ),
                ),
                ("territory", models.CharField(default="GH", max_length=10)),
                ("station_id", models.IntegerField(blank=True, null=True)),
                ("played_at", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "external_recording",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="royalties.externalrecording",
                    ),
                ),
                (
                    "external_work",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="royalties.externalwork",
                    ),
                ),
                (
                    "origin_partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="royalties.partnerpro",
                    ),
                ),
                (
                    "play_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_attributions",
                        to="music_monitor.playlog",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["territory", "played_at"],
                        name="royalties_u_territo_aab024_idx",
                    )
                ],
            },
        ),
    ]
